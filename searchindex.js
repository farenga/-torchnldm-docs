Search.setIndex({"docnames": ["index", "installation", "modules", "setup", "torchnldm", "torchnldm.data", "torchnldm.evaluate", "torchnldm.model", "torchnldm.train", "torchnldm.utils", "usage"], "filenames": ["index.rst", "installation.rst", "modules.rst", "setup.rst", "torchnldm.rst", "torchnldm.data.rst", "torchnldm.evaluate.rst", "torchnldm.model.rst", "torchnldm.train.rst", "torchnldm.utils.rst", "usage.rst"], "titles": ["TorchNLDM Documentation", "Installation", "torchnldm", "setup module", "torchnldm", "torchnldm.data", "torchnldm.evaluate", "torchnldm.model", "torchnldm.train", "torchnldm.utils", "Usage"], "terms": {"instal": 0, "how": 0, "librari": [0, 10], "usag": 0, "data": [0, 2, 4, 7, 10], "perform": [0, 1, 6, 7, 9], "handl": [0, 7, 9], "preprocess": [0, 4, 7, 10], "It": [0, 5, 7, 9], "provid": [0, 7, 9], "dataload": [0, 2, 4, 6, 7, 8, 10], "class": [0, 5, 6, 7, 8, 9], "which": [0, 6, 7, 8], "facilit": 0, "dataset": [0, 5, 6, 7, 8, 10], "load": [0, 5, 7, 10], "method": [0, 6, 7, 8, 9], "dedic": [0, 10], "batch": [0, 5, 7, 8], "trajectori": [0, 5, 7], "sampl": [0, 5, 8], "addition": 0, "datascal": [0, 2, 4, 7], "i": [0, 1, 5, 7, 9], "avail": [0, 7, 9], "normal": 0, "featur": [0, 5, 7, 9, 10], "scale": [0, 5, 7, 9], "task": 0, "model": [0, 2, 4, 6, 8, 10], "includ": 0, "nldmbase": [0, 2, 4, 7, 8], "serv": 0, "base": [0, 5, 6, 7, 8, 9], "nldm": [0, 2, 4, 6, 8, 9, 10], "nldf": [0, 2, 4, 6, 7, 8], "implement": [0, 7, 9], "also": 0, "compon": 0, "relat": [0, 5], "autoencod": 0, "neural": [0, 7], "differenti": [0, 7], "equat": [0, 7], "train": [0, 2, 4, 5, 7, 10], "contain": [0, 10], "trainer": [0, 2, 4, 7, 10], "routin": [0, 6, 7, 8, 10], "evalu": [0, 2, 4, 7, 10], "util": [0, 2, 4], "consist": [0, 7], "sever": 0, "submodul": 0, "differ": [0, 8, 9], "purpos": [0, 7], "error": [0, 2, 4, 9], "metric": [0, 2, 4, 6, 8], "calcul": 0, "pre": [0, 6, 7, 9], "network": [0, 7, 9], "build": 0, "block": [0, 7, 9], "main": [0, 1, 10], "plot": [0, 2, 4], "visual": 0, "result": 0, "index": [0, 5, 6, 7], "search": 0, "page": 0, "The": [1, 10], "can": [1, 9, 10], "from": [1, 5, 6, 7, 10], "github": [1, 5], "repositori": [1, 10], "http": [1, 5, 7, 9], "com": [1, 5], "farenga": [1, 5], "torchnldm": [1, 10], "In": [1, 5], "particular": 1, "branch": 1, "pip": 1, "git": 1, "while": [1, 7, 9], "dev": 1, "otherwis": 1, "complet": [1, 5], "clone": 1, "follow": [1, 10], "cd": 1, "If": [1, 9], "still": 1, "privat": 1, "person": 1, "access": 1, "token": 1, "need": [1, 7, 8, 9], "gh_personal_access_token": 1, "setup": 2, "modul": [2, 7, 9, 10], "dataloaderconfig": [2, 4, 5, 10], "evaluatorconfig": [2, 4, 6, 10], "ae": [2, 4], "fielddecod": [2, 4, 7], "fieldencod": [2, 4, 7], "statedecod": [2, 4, 7], "stateencod": [2, 4, 7], "nde": [2, 4], "neurald": [2, 4, 7], "neuralod": [2, 4, 7], "neuralsd": [2, 4, 7], "neuralvectorfield": [2, 4, 7], "nldfconfig": [2, 4, 7], "nldmconfig": [2, 4, 7, 10], "trainerconfig": [2, 4, 8, 10], "config": [2, 4, 5, 6, 7, 8], "configbas": [2, 4, 6, 7, 8, 9], "configjsonencod": [2, 4, 9], "metricslogg": [2, 4, 9], "assert_dim_shap": [2, 4, 9], "loss_criterion": [2, 4, 7, 9], "relative_error": [2, 4, 9], "relative_error_vector": [2, 4, 9], "get_layers_s": [2, 4, 9], "get_model_param": [2, 4, 9], "model_summari": [2, 4, 9], "nn": [2, 4, 7], "activ": [2, 4, 7, 9], "convblock": [2, 4, 9], "convlay": [2, 4, 9], "convresblock": [2, 4, 9], "downsampl": [2, 4, 9], "gaussianfouriermap": [2, 4, 9], "hadamardlay": [2, 4, 9], "hiddenopnet": [2, 4, 9], "hiddensumlay": [2, 4, 9], "hypernetwork": [2, 4, 9], "linear": [2, 4, 9], "mlp": [2, 4, 7, 9], "positionalencod": [2, 4, 9], "reshadamardlay": [2, 4, 9], "sine": [2, 4, 9], "upsampl": [2, 4, 9], "op": [2, 4], "pod": [2, 4, 7, 9], "delete_tensor": [2, 4, 9], "get_meanstd": [2, 4, 9], "get_minmax": [2, 4, 9], "minmax_scal": [2, 4, 9], "multiple_unsqueez": [2, 4, 9], "set_se": [2, 4, 9], "standard_scal": [2, 4, 9], "time": [2, 4, 5, 7, 9, 10], "get_gridpoints_2d": [2, 4, 9], "plot1": [2, 4, 9], "plot3": [2, 4, 9], "plot_evolut": [2, 4, 9], "plot_evolution_error": [2, 4, 9], "get_batch": [4, 5], "get_sampl": [4, 5], "get_scaler_paramet": [4, 5], "get_sect": [4, 5], "get_train_t0_indic": [4, 5], "get_trajectori": [4, 5], "summari": [4, 5, 7], "devic": [4, 5, 6, 7, 8, 9], "filepath": [4, 5], "reduced_dim": [4, 5], "scaler_typ": [4, 5], "time_subsampl": [4, 5], "time_validation_split": [4, 5], "scale_dataset": [4, 5], "scale_featur": [4, 5], "eval": [4, 6, 10], "compile_mod": [4, 6, 8], "enable_amp": [4, 6, 7, 8], "enable_sc": [4, 6, 7], "enable_tf32": [4, 6, 8], "metrics_filenam": [4, 6, 8], "output_directori": [4, 6, 8], "sample_subtrajectori": [4, 6], "start_t_index": [4, 6], "timestep": [4, 5, 6, 7], "forward": [4, 7, 9], "wrap_nvf": [4, 7], "get_batch_loss": [4, 7], "loss": [4, 7], "postprocess": [4, 6, 7], "predict_trajectori": [4, 7], "np": [4, 5, 7], "ae_activ": [4, 7], "d": [4, 5, 7, 9], "decoder_architectur": [4, 7], "decoder_depth": [4, 7], "decoder_hidden_dim": [4, 7], "encoder_architectur": [4, 7], "encoder_depth": [4, 7], "encoder_hidden_dim": [4, 7], "latent_dim": [4, 7], "n": [4, 5, 6, 7, 9], "nde_activ": [4, 7], "nde_adjoint": [4, 7], "nde_depth": [4, 7], "nde_hidden_dim": [4, 7], "nde_integration_method": [4, 7], "nde_typ": [4, 7], "pod_lay": [4, 7], "add_pod_lay": [4, 7], "adjoint": [4, 7], "bidirect": [4, 7, 8], "latent_guid": [4, 7, 8], "load_model_from_checkpoint": [4, 7], "load_scaler_from_checkpoint": [4, 7], "load_scaler_from_dataset": [4, 7, 10], "training_epoch": [4, 7], "validation_epoch": [4, 7], "nh": [4, 5, 7], "ae_conv_dim": [4, 7], "ae_residual_block": [4, 7], "decoder_conv_depth": [4, 7], "decoder_conv_hidden_channel": [4, 7], "decoder_mlp_state_hidden_dim": [4, 7], "decoder_reshape_dim": [4, 7], "encoder_conv_depth": [4, 7], "encoder_conv_hidden_channel": [4, 7], "encoder_mlp_param_depth": [4, 7], "encoder_mlp_param_hidden_dim": [4, 7], "encoder_mlp_state_hidden_dim": [4, 7], "encoder_mlp_time_depth": [4, 7], "encoder_mlp_time_hidden_dim": [4, 7], "encoder_param_emb": [4, 7], "encoder_reshape_dim": [4, 7], "state_channel": [4, 7], "batch_size_nod": [4, 5, 7, 8], "batch_size_param": [4, 5, 7, 8], "batch_size_timestep": [4, 5, 7, 8], "lambda_l2": [4, 8], "lr": [4, 8], "lr_schedul": [4, 8], "n_epoch": [4, 8], "optim": [4, 7, 8], "save_best_checkpoint": [4, 8], "save_checkpoints_freq": [4, 8], "valid": [4, 5, 7, 8], "warmup_lr": [4, 8], "warmup_n_epoch": [4, 8], "save": [4, 8, 9], "default": [4, 9], "print_curr": [4, 9], "updat": [4, 9], "set_hypernet_dim": [4, 9], "build_mlp": [4, 9], "init_param": [4, 9], "pe_vmap": [4, 9], "verbos": [5, 6, 8], "true": [5, 6, 7, 8, 9], "object": [5, 6, 7, 8, 9], "allow": 5, "manag": 5, "pdegen": [5, 7], "hdf5": 5, "file": 5, "compli": 5, "structur": [5, 7], "arg": [5, 6, 7, 8, 9], "configur": [5, 6, 7, 8, 9], "section_id": [5, 7], "str": [5, 6, 7, 8, 9], "t0_index": [5, 7], "int": [5, 6, 7, 8, 9], "none": [5, 6, 7, 8, 9], "tupl": [5, 6, 7, 8, 9], "torch": [5, 6, 7, 8, 9], "tensor": [5, 7, 9], "return": [5, 7, 9], "ut": [5, 7], "initi": [5, 7], "valu": [5, 7], "u0": [5, 7], "respect": 5, "paramet": [5, 7, 8], "instanc": [5, 7, 8, 9], "mut0_batch": 5, "t_batch": 5, "snapshot": 5, "": [5, 7, 9], "p": 5, "given": [5, 7, 9], "size": [5, 7], "an": [5, 7, 9], "case": 5, "pass": [5, 7, 9], "output": [5, 6, 7, 8, 9], "field": [5, 7], "form": 5, "so": [5, 7, 9, 10], "last": [5, 9], "dimens": [5, 7, 9], "state": [5, 7, 9], "shape": [5, 7, 9], "instead": [5, 7, 9], "than": 5, "id": 5, "section": 5, "nt": [5, 7], "number": [5, 6, 7, 8, 9], "length": [5, 6, 7, 8], "mesh": 5, "node": [5, 7, 8], "m": [5, 7], "mut0": [5, 7], "x": [5, 7, 9], "coordin": [5, 7], "batch_siz": [5, 7], "t": [5, 7, 9], "1d": [5, 7], "mut": [5, 7], "whole": 5, "j": 5, "param": [5, 7], "selector": 5, "along": 5, "0": [5, 6, 8, 9], "th": 5, "step": [5, 7, 10], "1": [5, 7, 9], "st": 5, "uh": [5, 7], "t_j": 5, "mu_i": 5, "return_typ": 5, "creat": 5, "multipl": 5, "account": 5, "split": [5, 10], "ar": [5, 7, 8], "via": [5, 7, 9], "over": [5, 7], "name": [5, 7, 9], "subsect": 5, "max_timestep": 5, "shuffl": 5, "bool": [5, 6, 7, 8, 9], "fals": [5, 6, 7, 8, 9], "list": [5, 7, 9], "sequenc": [5, 6, 7], "param_index": [5, 7], "field_form": 5, "singl": [5, 7], "paramt": 5, "flag": [5, 6, 7, 8], "enabl": [5, 6, 7, 8], "print": [5, 7], "info": [5, 7], "type": [5, 6, 7, 8], "cpu": [5, 6, 7, 8], "move": 5, "specifi": [5, 7, 9], "rescal": 5, "feature_typ": 5, "u": [5, 7, 9], "invers": [5, 7, 9], "argument": [5, 7], "indic": 5, "mu": [5, 7], "intend": [6, 7, 8], "us": [6, 7, 8], "test": [6, 10], "loader": [6, 8], "start": [6, 8, 10], "20": [6, 9], "predict": [6, 7], "subtrajectori": [6, 8], "extract": 6, "subsampl": 6, "regular": [6, 8], "random": [6, 9], "intern": [6, 7, 9], "tensorfloat32": [6, 8], "precis": [6, 7, 8], "automat": [6, 7, 8], "mix": [6, 7, 8], "compil": [6, 8], "directori": [6, 8], "path": [6, 8, 9], "store": [6, 8], "filenam": [6, 8, 9], "depth": [7, 9], "3": [7, 9], "hidden_dim": [7, 9], "64": 7, "elu": [7, 9], "architectur": [7, 9], "hidden_sum": [7, 9], "decod": 7, "continuo": 7, "vector": [7, 9], "dim": [7, 9], "nmu": 7, "spatial": [7, 8, 9, 10], "domain": 7, "latent": 7, "encod": [7, 9], "layer": [7, 9], "hidden": [7, 9], "z": 7, "defin": [7, 9], "comput": [7, 9], "everi": [7, 9], "call": [7, 9], "should": [7, 9], "overridden": [7, 9], "all": [7, 9], "subclass": [7, 9], "although": [7, 9], "recip": [7, 9], "within": [7, 9, 10], "thi": [7, 9], "function": [7, 9], "one": [7, 9], "afterward": [7, 9], "sinc": [7, 9], "former": [7, 9], "take": [7, 9], "care": [7, 9], "run": [7, 9], "regist": [7, 9], "hook": [7, 9], "latter": [7, 9], "silent": [7, 9], "ignor": [7, 9], "them": [7, 9], "conv_dim": 7, "conv_depth": 7, "out_channel": [7, 9], "hidden_channel": 7, "reshape_dim": 7, "residual_block": 7, "mlp_hidden_dim": 7, "t0": 7, "tf": 7, "high": 7, "dimension": [7, 9], "discret": [7, 10], "input": [7, 9], "produc": 7, "intermedi": 7, "represent": 7, "reshap": 7, "process": 7, "feed": 7, "convolut": [7, 9], "possibli": 7, "equip": [7, 9], "residu": [7, 9], "connect": [7, 9], "emlpoi": 7, "2d": 7, "channel": 7, "first": 7, "two": [7, 9], "skip": [7, 9], "in_channel": [7, 9], "mlp_state_hidden_dim": 7, "256": 7, "param_emb": 7, "multipli": 7, "mlp_param_depth": 7, "2": [7, 9], "mlp_param_hidden_dim": 7, "mlp_time_depth": 7, "mlp_time_hidden_dim": 7, "embed": [7, 9], "For": [7, 9, 10], "parameter": 7, "version": 7, "consid": 7, "pstateencod": 7, "degre": 7, "freedom": 7, "when": 7, "appli": [7, 9], "conv2d": 7, "must": 7, "sqrt": 7, "combin": 7, "project": 7, "sum": [7, 9], "infer": 7, "scheme": 7, "abc": 7, "abstract": 7, "wrap": 7, "de": 7, "dynam": 7, "z0": 7, "integration_method": 7, "euler": 7, "behavior": 7, "order": [7, 10], "numer": [7, 10], "integr": 7, "emploi": 7, "sensit": 7, "f": [7, 9], "ordinari": 7, "upon": 7, "torchdiffeq": 7, "packag": 7, "sigma": [7, 9], "stochast": 7, "torchsd": 7, "ito": 7, "sde": 7, "diagon": 7, "nois": 7, "drift": 7, "term": 7, "diffus": 7, "implicit": 7, "depend": 7, "lead": [7, 9], "autonom": 7, "formul": 7, "continu": [7, 10], "attribut": 7, "codomain": 7, "total": 7, "od": 7, "map": [7, 9], "zt": 7, "latent_nd": 7, "evolv": 7, "std": [7, 9], "arxiv": [7, 9], "org": [7, 9], "ab": [7, 9], "1806": 7, "07366": 7, "gpu": 7, "cuda": 7, "return_lat": 7, "b": [7, 9], "concaten": 7, "evolut": [7, 9], "involv": 7, "window": 7, "algorithm": [7, 8], "ut_pr": [7, 9], "criterion": 7, "return_input": 7, "hadamard": [7, 9], "posit": [7, 9], "transpos": 7, "ad": 7, "its": 7, "matrix": [7, 9], "basic": 7, "compos": [7, 10], "common": 7, "layout": 7, "templat": [7, 9], "thu": 7, "ensur": 7, "compat": 7, "back": 7, "t_0": 7, "t_f": 7, "those": 7, "where": [7, 9], "properti": 7, "float": [7, 8, 9], "gener": [7, 9], "post": 7, "scaler": 7, "epoch_loss": 7, "guidanc": 7, "checkpoint_path": 7, "checkpoint": [7, 8], "eventu": 7, "addit": 7, "dict": 7, "home": 7, "nicola": 7, "local": 7, "lib": 7, "python3": 7, "10": [7, 9], "site": 7, "__init__": 7, "py": 7, "epoch": [7, 8], "specif": 7, "child": 7, "inherit": 7, "e": 7, "g": 7, "adam": [7, 8], "more": 7, "32": 7, "deriv": 8, "001": 8, "1e": 8, "05": 8, "popul": 8, "adadelta": 8, "adamax": 8, "rmsprop": 8, "sgd": 8, "learn": [8, 10], "rate": 8, "schedul": 8, "decai": 8, "factor": 8, "exponentiallr": 8, "999": 8, "l2": 8, "warmup": 8, "dure": 8, "frequenc": 8, "configu": 9, "skipkei": 9, "ensure_ascii": 9, "check_circular": 9, "allow_nan": 9, "sort_kei": 9, "indent": 9, "separ": 9, "jsonencod": 9, "json": 9, "serial": 9, "obj": 9, "serializ": 9, "o": 9, "rais": 9, "typeerror": 9, "exampl": 9, "support": 9, "arbitrari": 9, "iter": 9, "you": 9, "could": 9, "like": 9, "def": 9, "self": 9, "try": 9, "except": 9, "els": 9, "let": 9, "metrics_kei": 9, "kei": 9, "metric_valu": 9, "return_dim": 9, "u_tru": 9, "u_pr": 9, "flatten_last": 9, "activation_id": 9, "_act_dict": 9, "silu": 9, "gelu": 9, "relu": 9, "tanh": 9, "softsign": 9, "sigmoid": 9, "identifi": 9, "kernel_s": 9, "stride": 9, "pad": 9, "A": 9, "stack": 9, "1512": 9, "03385": 9, "nonlinear": 9, "c": 9, "2n": 9, "3d": 9, "2w": 9, "2h": 9, "4d": 9, "w": 9, "h": 9, "averag": 9, "pool": 9, "input_dim": 9, "mapping_dim": 9, "gaussian": 9, "fourier": 9, "arrai": 9, "sin": 9, "pi": 9, "co": 9, "2006": 9, "10739": 9, "num_featur": 9, "y": 9, "cond_input_dim": 9, "output_dim": 9, "positional_encod": 9, "oper": 9, "condit": 9, "product": 9, "between": 9, "variabl": 9, "net": 9, "weight": 9, "1609": 9, "09106": 9, "in_featur": 9, "out_featur": 9, "bia": 9, "dtype": 9, "layers_dim": 9, "multi": 9, "perceptron": 9, "instanti": [9, 10], "wai": 9, "By": 9, "hidden_dim_1": 9, "hidden_dim_n": 9, "string": 9, "each": [9, 10], "have": 9, "same": 9, "enough": 9, "sequenti": 9, "l": 9, "nerf": 9, "2003": 9, "08934": 9, "transform": 9, "vmap": 9, "w0": 9, "30": 9, "sinusoid": 9, "siren": 9, "09661": 9, "nearest": 9, "neighbour": 9, "interpol": 9, "save_path": 9, "keep_last_dim": 9, "min": 9, "max": 9, "seed": 9, "mean": 9, "coord": 9, "titl": 9, "solut": 9, "figsiz": 9, "7": 9, "re": 9, "100": 9, "cmap": 9, "matplotlib": 9, "color": 9, "listedcolormap": 9, "fom": 9, "rel": 9, "5": 9, "ut_tru": 9, "scilimit": 9, "4": 9, "revolv": 10, "around": 10, "machin": 10, "workflow": 10, "four": 10, "stage": 10, "definit": 10, "ml": 10, "import": 10, "train_dataset_config": 10, "test_dataset_config": 10, "train_dataset": 10, "test_dataset": 10, "model_config": 10, "train_config": 10, "eval_config": 10, "found": 10, "experi": 10, "folder": 10, "jupyt": 10, "notebook": 10, "ipynb": 10, "format": 10, "concern": 10, "applic": 10, "reduc": 10, "pde": 10}, "objects": {"torchnldm.data": [[5, 0, 0, "-", "dataloader"], [5, 0, 0, "-", "datascaler"]], "torchnldm.data.dataloader": [[5, 1, 1, "", "DataLoader"], [5, 1, 1, "", "DataLoaderConfig"]], "torchnldm.data.dataloader.DataLoader": [[5, 2, 1, "", "get_batch"], [5, 2, 1, "", "get_sample"], [5, 2, 1, "", "get_scaler_parameters"], [5, 2, 1, "", "get_section"], [5, 2, 1, "", "get_train_t0_indices"], [5, 2, 1, "", "get_trajectory"], [5, 2, 1, "", "summary"], [5, 2, 1, "", "to"]], "torchnldm.data.dataloader.DataLoaderConfig": [[5, 3, 1, "", "device"], [5, 3, 1, "", "filepath"], [5, 3, 1, "", "reduced_dim"], [5, 3, 1, "", "scaler_type"], [5, 3, 1, "", "time_subsampling"], [5, 3, 1, "", "time_validation_split"]], "torchnldm.data.datascaler": [[5, 1, 1, "", "DataScaler"]], "torchnldm.data.datascaler.DataScaler": [[5, 2, 1, "", "scale_dataset"], [5, 2, 1, "", "scale_feature"]], "torchnldm.evaluate": [[6, 0, 0, "-", "evaluator"]], "torchnldm.evaluate.evaluator": [[6, 1, 1, "", "Evaluator"], [6, 1, 1, "", "EvaluatorConfig"]], "torchnldm.evaluate.evaluator.Evaluator": [[6, 2, 1, "", "eval"]], "torchnldm.evaluate.evaluator.EvaluatorConfig": [[6, 3, 1, "", "compile_mode"], [6, 3, 1, "", "device"], [6, 3, 1, "", "enable_amp"], [6, 3, 1, "", "enable_scaling"], [6, 3, 1, "", "enable_tf32"], [6, 3, 1, "", "metrics_filename"], [6, 3, 1, "", "output_directory"], [6, 3, 1, "", "sample_subtrajectories"], [6, 3, 1, "", "start_t_index"], [6, 3, 1, "", "timesteps"]], "torchnldm.model": [[7, 0, 0, "-", "ae"], [7, 0, 0, "-", "nde"], [7, 0, 0, "-", "nldm"]], "torchnldm.model.ae": [[7, 1, 1, "", "FieldDecoder"], [7, 1, 1, "", "FieldEncoder"], [7, 1, 1, "", "StateDecoder"], [7, 1, 1, "", "StateEncoder"]], "torchnldm.model.ae.FieldDecoder": [[7, 2, 1, "", "forward"]], "torchnldm.model.ae.FieldEncoder": [[7, 2, 1, "", "forward"]], "torchnldm.model.ae.StateDecoder": [[7, 2, 1, "", "forward"]], "torchnldm.model.ae.StateEncoder": [[7, 2, 1, "", "forward"]], "torchnldm.model.nde": [[7, 1, 1, "", "NeuralDE"], [7, 1, 1, "", "NeuralODE"], [7, 1, 1, "", "NeuralSDE"], [7, 1, 1, "", "NeuralVectorField"]], "torchnldm.model.nde.NeuralDE": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "wrap_nvf"]], "torchnldm.model.nde.NeuralODE": [[7, 2, 1, "", "forward"]], "torchnldm.model.nde.NeuralSDE": [[7, 2, 1, "", "forward"]], "torchnldm.model.nde.NeuralVectorField": [[7, 2, 1, "", "forward"]], "torchnldm.model.nldm": [[7, 1, 1, "", "NLDF"], [7, 1, 1, "", "NLDFConfig"], [7, 1, 1, "", "NLDM"], [7, 1, 1, "", "NLDMBase"], [7, 1, 1, "", "NLDMConfig"]], "torchnldm.model.nldm.NLDF": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "get_batch_loss"], [7, 2, 1, "", "loss"], [7, 2, 1, "", "loss_criterion"], [7, 2, 1, "", "postprocess"], [7, 2, 1, "", "predict_trajectory"], [7, 2, 1, "", "preprocess"]], "torchnldm.model.nldm.NLDFConfig": [[7, 3, 1, "", "Np"], [7, 3, 1, "", "ae_activation"], [7, 3, 1, "", "d"], [7, 3, 1, "", "decoder_architecture"], [7, 3, 1, "", "decoder_depth"], [7, 3, 1, "", "decoder_hidden_dim"], [7, 3, 1, "", "device"], [7, 3, 1, "", "encoder_architecture"], [7, 3, 1, "", "encoder_depth"], [7, 3, 1, "", "encoder_hidden_dim"], [7, 3, 1, "", "latent_dim"], [7, 3, 1, "", "n"], [7, 3, 1, "", "nde_activation"], [7, 3, 1, "", "nde_adjoint"], [7, 3, 1, "", "nde_depth"], [7, 3, 1, "", "nde_hidden_dim"], [7, 3, 1, "", "nde_integration_method"], [7, 3, 1, "", "nde_type"]], "torchnldm.model.nldm.NLDM": [[7, 2, 1, "", "POD_layer"], [7, 2, 1, "", "add_POD_layer"], [7, 2, 1, "", "forward"], [7, 2, 1, "", "get_batch_loss"], [7, 2, 1, "", "loss"], [7, 2, 1, "", "loss_criterion"], [7, 2, 1, "", "postprocess"], [7, 2, 1, "", "predict_trajectory"], [7, 2, 1, "", "preprocess"]], "torchnldm.model.nldm.NLDMBase": [[7, 4, 1, "", "adjoint"], [7, 4, 1, "", "bidirectional"], [7, 2, 1, "", "evaluate"], [7, 2, 1, "", "forward"], [7, 2, 1, "", "get_batch_loss"], [7, 4, 1, "", "latent_guidance"], [7, 2, 1, "", "load_model_from_checkpoint"], [7, 2, 1, "", "load_scaler_from_checkpoint"], [7, 2, 1, "", "load_scaler_from_dataset"], [7, 2, 1, "", "loss"], [7, 2, 1, "", "loss_criterion"], [7, 4, 1, "", "nde_adjoint"], [7, 4, 1, "", "nde_integration_method"], [7, 2, 1, "", "predict_trajectory"], [7, 2, 1, "", "summary"], [7, 2, 1, "", "training_epoch"], [7, 2, 1, "", "validation_epoch"]], "torchnldm.model.nldm.NLDMConfig": [[7, 3, 1, "", "Nh"], [7, 3, 1, "", "Np"], [7, 3, 1, "", "ae_activation"], [7, 3, 1, "", "ae_conv_dim"], [7, 3, 1, "", "ae_residual_blocks"], [7, 3, 1, "", "decoder_conv_depth"], [7, 3, 1, "", "decoder_conv_hidden_channels"], [7, 3, 1, "", "decoder_mlp_state_hidden_dim"], [7, 3, 1, "", "decoder_reshape_dim"], [7, 3, 1, "", "device"], [7, 3, 1, "", "encoder_conv_depth"], [7, 3, 1, "", "encoder_conv_hidden_channels"], [7, 3, 1, "", "encoder_mlp_param_depth"], [7, 3, 1, "", "encoder_mlp_param_hidden_dim"], [7, 3, 1, "", "encoder_mlp_state_hidden_dim"], [7, 3, 1, "", "encoder_mlp_time_depth"], [7, 3, 1, "", "encoder_mlp_time_hidden_dim"], [7, 3, 1, "", "encoder_param_emb"], [7, 3, 1, "", "encoder_reshape_dim"], [7, 3, 1, "", "latent_dim"], [7, 3, 1, "", "nde_activation"], [7, 3, 1, "", "nde_adjoint"], [7, 3, 1, "", "nde_depth"], [7, 3, 1, "", "nde_hidden_dim"], [7, 3, 1, "", "nde_integration_method"], [7, 3, 1, "", "nde_type"], [7, 3, 1, "", "state_channels"]], "torchnldm.train": [[8, 0, 0, "-", "trainer"]], "torchnldm.train.trainer": [[8, 1, 1, "", "Trainer"], [8, 1, 1, "", "TrainerConfig"]], "torchnldm.train.trainer.Trainer": [[8, 2, 1, "", "train"]], "torchnldm.train.trainer.TrainerConfig": [[8, 3, 1, "", "batch_size_nodes"], [8, 3, 1, "", "batch_size_params"], [8, 3, 1, "", "batch_size_timesteps"], [8, 3, 1, "", "bidirectional"], [8, 3, 1, "", "compile_mode"], [8, 3, 1, "", "device"], [8, 3, 1, "", "enable_amp"], [8, 3, 1, "", "enable_tf32"], [8, 3, 1, "", "lambda_l2"], [8, 3, 1, "", "latent_guidance"], [8, 3, 1, "", "lr"], [8, 3, 1, "", "lr_scheduler"], [8, 3, 1, "", "metrics_filename"], [8, 3, 1, "", "n_epochs"], [8, 3, 1, "", "optimizer"], [8, 3, 1, "", "output_directory"], [8, 3, 1, "", "save_best_checkpoints"], [8, 3, 1, "", "save_checkpoints_freq"], [8, 3, 1, "", "validation"], [8, 3, 1, "", "warmup_lr"], [8, 3, 1, "", "warmup_n_epochs"]], "torchnldm.utils": [[9, 0, 0, "-", "config"], [9, 0, 0, "-", "metrics"], [9, 0, 0, "-", "model"], [9, 0, 0, "-", "nn"], [9, 0, 0, "-", "ops"], [9, 0, 0, "-", "plot"]], "torchnldm.utils.config": [[9, 1, 1, "", "ConfigBase"], [9, 1, 1, "", "ConfigJSONEncoder"]], "torchnldm.utils.config.ConfigBase": [[9, 2, 1, "", "save"]], "torchnldm.utils.config.ConfigJSONEncoder": [[9, 2, 1, "", "default"]], "torchnldm.utils.metrics": [[9, 1, 1, "", "MetricsLogger"], [9, 5, 1, "", "assert_dim_shape"], [9, 5, 1, "", "error"], [9, 5, 1, "", "loss_criterion"], [9, 5, 1, "", "relative_error"], [9, 5, 1, "", "relative_error_vectorized"]], "torchnldm.utils.metrics.MetricsLogger": [[9, 2, 1, "", "print_current"], [9, 2, 1, "", "save"], [9, 2, 1, "", "update"]], "torchnldm.utils.model": [[9, 5, 1, "", "get_layers_sizes"], [9, 5, 1, "", "get_model_params"], [9, 5, 1, "", "model_summary"]], "torchnldm.utils.nn": [[9, 1, 1, "", "Activation"], [9, 1, 1, "", "ConvBlock"], [9, 1, 1, "", "ConvLayer"], [9, 1, 1, "", "ConvResBlock"], [9, 1, 1, "", "Downsample"], [9, 1, 1, "", "GaussianFourierMap"], [9, 1, 1, "", "HadamardLayer"], [9, 1, 1, "", "HiddenOpNet"], [9, 1, 1, "", "HiddenSumLayer"], [9, 1, 1, "", "Hypernetwork"], [9, 1, 1, "", "Linear"], [9, 1, 1, "", "MLP"], [9, 1, 1, "", "PositionalEncoding"], [9, 1, 1, "", "ResHadamardLayer"], [9, 1, 1, "", "Sine"], [9, 1, 1, "", "Upsample"]], "torchnldm.utils.nn.Activation": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.ConvBlock": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.ConvLayer": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.ConvResBlock": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.Downsample": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.GaussianFourierMap": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.HadamardLayer": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.HiddenOpNet": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.HiddenSumLayer": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.Hypernetwork": [[9, 2, 1, "", "forward"], [9, 2, 1, "", "set_hypernet_dims"]], "torchnldm.utils.nn.Linear": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.MLP": [[9, 2, 1, "", "build_mlp"], [9, 2, 1, "", "forward"], [9, 2, 1, "", "init_params"]], "torchnldm.utils.nn.PositionalEncoding": [[9, 2, 1, "", "forward"], [9, 2, 1, "", "pe_vmap"]], "torchnldm.utils.nn.ResHadamardLayer": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.Sine": [[9, 2, 1, "", "forward"]], "torchnldm.utils.nn.Upsample": [[9, 2, 1, "", "forward"]], "torchnldm.utils.ops": [[9, 5, 1, "", "POD"], [9, 5, 1, "", "delete_tensor"], [9, 5, 1, "", "get_meanstd"], [9, 5, 1, "", "get_minmax"], [9, 5, 1, "", "minmax_scaler"], [9, 5, 1, "", "multiple_unsqueeze"], [9, 5, 1, "", "set_seed"], [9, 5, 1, "", "standard_scaler"], [9, 5, 1, "", "timing"]], "torchnldm.utils.plot": [[9, 5, 1, "", "get_gridpoints_2d"], [9, 5, 1, "", "plot1"], [9, 5, 1, "", "plot3"], [9, 5, 1, "", "plot_evolution"], [9, 5, 1, "", "plot_evolution_error"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"torchnldm": [0, 2, 4, 5, 6, 7, 8, 9], "document": 0, "us": 0, "modul": [0, 3], "indic": 0, "tabl": 0, "instal": 1, "how": 1, "librari": 1, "setup": 3, "data": 5, "dataload": 5, "datascal": 5, "evalu": 6, "model": [7, 9], "ae": 7, "nde": 7, "nldm": 7, "train": 8, "trainer": 8, "util": 9, "config": 9, "metric": 9, "nn": 9, "op": 9, "plot": 9, "usag": 10, "typic": 10, "exampl": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"TorchNLDM Documentation": [[0, "torchnldm-documentation"]], "Using TorchNLDM": [[0, "using-torchnldm"]], "TorchNLDM Modules": [[0, "torchnldm-modules"]], "Indices and tables": [[0, "indices-and-tables"]], "Installation": [[1, "installation"]], "How to install the library": [[1, "how-to-install-the-library"]], "torchnldm": [[2, "torchnldm"], [4, "torchnldm"]], "setup module": [[3, "setup-module"]], "torchnldm.data": [[5, "torchnldm-data"]], "torchnldm.data.dataloader": [[5, "module-torchnldm.data.dataloader"]], "torchnldm.data.datascaler": [[5, "module-torchnldm.data.datascaler"]], "torchnldm.evaluate": [[6, "torchnldm-evaluate"]], "torchnldm.evaluate.evaluator": [[6, "module-torchnldm.evaluate.evaluator"]], "torchnldm.model": [[7, "torchnldm-model"]], "torchnldm.model.ae": [[7, "module-torchnldm.model.ae"]], "torchnldm.model.nde": [[7, "module-torchnldm.model.nde"]], "torchnldm.model.nldm": [[7, "module-torchnldm.model.nldm"]], "torchnldm.train": [[8, "torchnldm-train"]], "torchnldm.train.trainer": [[8, "module-torchnldm.train.trainer"]], "torchnldm.utils": [[9, "torchnldm-utils"]], "torchnldm.utils.config": [[9, "module-torchnldm.utils.config"]], "torchnldm.utils.metrics": [[9, "module-torchnldm.utils.metrics"]], "torchnldm.utils.model": [[9, "module-torchnldm.utils.model"]], "torchnldm.utils.nn": [[9, "module-torchnldm.utils.nn"]], "torchnldm.utils.ops": [[9, "module-torchnldm.utils.ops"]], "torchnldm.utils.plot": [[9, "module-torchnldm.utils.plot"]], "Usage": [[10, "usage"]], "Typical usage": [[10, "typical-usage"]], "Examples": [[10, "examples"]]}, "indexentries": {"dataloader (class in torchnldm.data.dataloader)": [[5, "torchnldm.data.dataloader.DataLoader"]], "dataloaderconfig (class in torchnldm.data.dataloader)": [[5, "torchnldm.data.dataloader.DataLoaderConfig"]], "datascaler (class in torchnldm.data.datascaler)": [[5, "torchnldm.data.datascaler.DataScaler"]], "device (torchnldm.data.dataloader.dataloaderconfig attribute)": [[5, "torchnldm.data.dataloader.DataLoaderConfig.device"]], "filepath (torchnldm.data.dataloader.dataloaderconfig attribute)": [[5, "torchnldm.data.dataloader.DataLoaderConfig.filepath"]], "get_batch() (torchnldm.data.dataloader.dataloader method)": [[5, "torchnldm.data.dataloader.DataLoader.get_batch"]], "get_sample() (torchnldm.data.dataloader.dataloader method)": [[5, "torchnldm.data.dataloader.DataLoader.get_sample"]], "get_scaler_parameters() (torchnldm.data.dataloader.dataloader method)": [[5, "torchnldm.data.dataloader.DataLoader.get_scaler_parameters"]], "get_section() (torchnldm.data.dataloader.dataloader method)": [[5, "torchnldm.data.dataloader.DataLoader.get_section"]], "get_train_t0_indices() (torchnldm.data.dataloader.dataloader method)": [[5, "torchnldm.data.dataloader.DataLoader.get_train_t0_indices"]], "get_trajectory() (torchnldm.data.dataloader.dataloader method)": [[5, "torchnldm.data.dataloader.DataLoader.get_trajectory"]], "module": [[5, "module-torchnldm.data.dataloader"], [5, "module-torchnldm.data.datascaler"], [6, "module-torchnldm.evaluate.evaluator"], [7, "module-torchnldm.model.ae"], [7, "module-torchnldm.model.nde"], [7, "module-torchnldm.model.nldm"], [8, "module-torchnldm.train.trainer"], [9, "module-torchnldm.utils.config"], [9, "module-torchnldm.utils.metrics"], [9, "module-torchnldm.utils.model"], [9, "module-torchnldm.utils.nn"], [9, "module-torchnldm.utils.ops"], [9, "module-torchnldm.utils.plot"]], "reduced_dim (torchnldm.data.dataloader.dataloaderconfig attribute)": [[5, "torchnldm.data.dataloader.DataLoaderConfig.reduced_dim"]], "scale_dataset() (torchnldm.data.datascaler.datascaler method)": [[5, "torchnldm.data.datascaler.DataScaler.scale_dataset"]], "scale_feature() (torchnldm.data.datascaler.datascaler method)": [[5, "torchnldm.data.datascaler.DataScaler.scale_feature"]], "scaler_type (torchnldm.data.dataloader.dataloaderconfig attribute)": [[5, "torchnldm.data.dataloader.DataLoaderConfig.scaler_type"]], "summary() (torchnldm.data.dataloader.dataloader method)": [[5, "torchnldm.data.dataloader.DataLoader.summary"]], "time_subsampling (torchnldm.data.dataloader.dataloaderconfig attribute)": [[5, "torchnldm.data.dataloader.DataLoaderConfig.time_subsampling"]], "time_validation_split (torchnldm.data.dataloader.dataloaderconfig attribute)": [[5, "torchnldm.data.dataloader.DataLoaderConfig.time_validation_split"]], "to() (torchnldm.data.dataloader.dataloader method)": [[5, "torchnldm.data.dataloader.DataLoader.to"]], "torchnldm.data.dataloader": [[5, "module-torchnldm.data.dataloader"]], "torchnldm.data.datascaler": [[5, "module-torchnldm.data.datascaler"]], "evaluator (class in torchnldm.evaluate.evaluator)": [[6, "torchnldm.evaluate.evaluator.Evaluator"]], "evaluatorconfig (class in torchnldm.evaluate.evaluator)": [[6, "torchnldm.evaluate.evaluator.EvaluatorConfig"]], "compile_mode (torchnldm.evaluate.evaluator.evaluatorconfig attribute)": [[6, "torchnldm.evaluate.evaluator.EvaluatorConfig.compile_mode"]], "device (torchnldm.evaluate.evaluator.evaluatorconfig attribute)": [[6, "torchnldm.evaluate.evaluator.EvaluatorConfig.device"]], "enable_amp (torchnldm.evaluate.evaluator.evaluatorconfig attribute)": [[6, "torchnldm.evaluate.evaluator.EvaluatorConfig.enable_amp"]], "enable_scaling (torchnldm.evaluate.evaluator.evaluatorconfig attribute)": [[6, "torchnldm.evaluate.evaluator.EvaluatorConfig.enable_scaling"]], "enable_tf32 (torchnldm.evaluate.evaluator.evaluatorconfig attribute)": [[6, "torchnldm.evaluate.evaluator.EvaluatorConfig.enable_tf32"]], "eval() (torchnldm.evaluate.evaluator.evaluator method)": [[6, "torchnldm.evaluate.evaluator.Evaluator.eval"]], "metrics_filename (torchnldm.evaluate.evaluator.evaluatorconfig attribute)": [[6, "torchnldm.evaluate.evaluator.EvaluatorConfig.metrics_filename"]], "output_directory (torchnldm.evaluate.evaluator.evaluatorconfig attribute)": [[6, "torchnldm.evaluate.evaluator.EvaluatorConfig.output_directory"]], "sample_subtrajectories (torchnldm.evaluate.evaluator.evaluatorconfig attribute)": [[6, "torchnldm.evaluate.evaluator.EvaluatorConfig.sample_subtrajectories"]], "start_t_index (torchnldm.evaluate.evaluator.evaluatorconfig attribute)": [[6, "torchnldm.evaluate.evaluator.EvaluatorConfig.start_t_index"]], "timesteps (torchnldm.evaluate.evaluator.evaluatorconfig attribute)": [[6, "torchnldm.evaluate.evaluator.EvaluatorConfig.timesteps"]], "torchnldm.evaluate.evaluator": [[6, "module-torchnldm.evaluate.evaluator"]], "fielddecoder (class in torchnldm.model.ae)": [[7, "torchnldm.model.ae.FieldDecoder"]], "fieldencoder (class in torchnldm.model.ae)": [[7, "torchnldm.model.ae.FieldEncoder"]], "nldf (class in torchnldm.model.nldm)": [[7, "torchnldm.model.nldm.NLDF"]], "nldfconfig (class in torchnldm.model.nldm)": [[7, "torchnldm.model.nldm.NLDFConfig"]], "nldm (class in torchnldm.model.nldm)": [[7, "torchnldm.model.nldm.NLDM"]], "nldmbase (class in torchnldm.model.nldm)": [[7, "torchnldm.model.nldm.NLDMBase"]], "nldmconfig (class in torchnldm.model.nldm)": [[7, "torchnldm.model.nldm.NLDMConfig"]], "neuralde (class in torchnldm.model.nde)": [[7, "torchnldm.model.nde.NeuralDE"]], "neuralode (class in torchnldm.model.nde)": [[7, "torchnldm.model.nde.NeuralODE"]], "neuralsde (class in torchnldm.model.nde)": [[7, "torchnldm.model.nde.NeuralSDE"]], "neuralvectorfield (class in torchnldm.model.nde)": [[7, "torchnldm.model.nde.NeuralVectorField"]], "nh (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.Nh"]], "np (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.Np"]], "np (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.Np"]], "pod_layer() (torchnldm.model.nldm.nldm method)": [[7, "torchnldm.model.nldm.NLDM.POD_layer"]], "statedecoder (class in torchnldm.model.ae)": [[7, "torchnldm.model.ae.StateDecoder"]], "stateencoder (class in torchnldm.model.ae)": [[7, "torchnldm.model.ae.StateEncoder"]], "add_pod_layer() (torchnldm.model.nldm.nldm method)": [[7, "torchnldm.model.nldm.NLDM.add_POD_layer"]], "adjoint (torchnldm.model.nldm.nldmbase property)": [[7, "torchnldm.model.nldm.NLDMBase.adjoint"]], "ae_activation (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.ae_activation"]], "ae_activation (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.ae_activation"]], "ae_conv_dim (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.ae_conv_dim"]], "ae_residual_blocks (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.ae_residual_blocks"]], "bidirectional (torchnldm.model.nldm.nldmbase property)": [[7, "torchnldm.model.nldm.NLDMBase.bidirectional"]], "d (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.d"]], "decoder_architecture (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.decoder_architecture"]], "decoder_conv_depth (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.decoder_conv_depth"]], "decoder_conv_hidden_channels (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.decoder_conv_hidden_channels"]], "decoder_depth (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.decoder_depth"]], "decoder_hidden_dim (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.decoder_hidden_dim"]], "decoder_mlp_state_hidden_dim (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.decoder_mlp_state_hidden_dim"]], "decoder_reshape_dim (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.decoder_reshape_dim"]], "device (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.device"]], "device (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.device"]], "encoder_architecture (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.encoder_architecture"]], "encoder_conv_depth (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.encoder_conv_depth"]], "encoder_conv_hidden_channels (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.encoder_conv_hidden_channels"]], "encoder_depth (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.encoder_depth"]], "encoder_hidden_dim (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.encoder_hidden_dim"]], "encoder_mlp_param_depth (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.encoder_mlp_param_depth"]], "encoder_mlp_param_hidden_dim (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.encoder_mlp_param_hidden_dim"]], "encoder_mlp_state_hidden_dim (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.encoder_mlp_state_hidden_dim"]], "encoder_mlp_time_depth (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.encoder_mlp_time_depth"]], "encoder_mlp_time_hidden_dim (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.encoder_mlp_time_hidden_dim"]], "encoder_param_emb (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.encoder_param_emb"]], "encoder_reshape_dim (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.encoder_reshape_dim"]], "evaluate() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.evaluate"]], "forward() (torchnldm.model.ae.fielddecoder method)": [[7, "torchnldm.model.ae.FieldDecoder.forward"]], "forward() (torchnldm.model.ae.fieldencoder method)": [[7, "torchnldm.model.ae.FieldEncoder.forward"]], "forward() (torchnldm.model.ae.statedecoder method)": [[7, "torchnldm.model.ae.StateDecoder.forward"]], "forward() (torchnldm.model.ae.stateencoder method)": [[7, "torchnldm.model.ae.StateEncoder.forward"]], "forward() (torchnldm.model.nde.neuralde method)": [[7, "torchnldm.model.nde.NeuralDE.forward"]], "forward() (torchnldm.model.nde.neuralode method)": [[7, "torchnldm.model.nde.NeuralODE.forward"]], "forward() (torchnldm.model.nde.neuralsde method)": [[7, "torchnldm.model.nde.NeuralSDE.forward"]], "forward() (torchnldm.model.nde.neuralvectorfield method)": [[7, "torchnldm.model.nde.NeuralVectorField.forward"]], "forward() (torchnldm.model.nldm.nldf method)": [[7, "torchnldm.model.nldm.NLDF.forward"]], "forward() (torchnldm.model.nldm.nldm method)": [[7, "torchnldm.model.nldm.NLDM.forward"]], "forward() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.forward"]], "get_batch_loss() (torchnldm.model.nldm.nldf method)": [[7, "torchnldm.model.nldm.NLDF.get_batch_loss"]], "get_batch_loss() (torchnldm.model.nldm.nldm method)": [[7, "torchnldm.model.nldm.NLDM.get_batch_loss"]], "get_batch_loss() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.get_batch_loss"]], "latent_dim (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.latent_dim"]], "latent_dim (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.latent_dim"]], "latent_guidance (torchnldm.model.nldm.nldmbase property)": [[7, "torchnldm.model.nldm.NLDMBase.latent_guidance"]], "load_model_from_checkpoint() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.load_model_from_checkpoint"]], "load_scaler_from_checkpoint() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.load_scaler_from_checkpoint"]], "load_scaler_from_dataset() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.load_scaler_from_dataset"]], "loss() (torchnldm.model.nldm.nldf method)": [[7, "torchnldm.model.nldm.NLDF.loss"]], "loss() (torchnldm.model.nldm.nldm method)": [[7, "torchnldm.model.nldm.NLDM.loss"]], "loss() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.loss"]], "loss_criterion() (torchnldm.model.nldm.nldf method)": [[7, "torchnldm.model.nldm.NLDF.loss_criterion"]], "loss_criterion() (torchnldm.model.nldm.nldm method)": [[7, "torchnldm.model.nldm.NLDM.loss_criterion"]], "loss_criterion() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.loss_criterion"]], "n (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.n"]], "nde_activation (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.nde_activation"]], "nde_activation (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.nde_activation"]], "nde_adjoint (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.nde_adjoint"]], "nde_adjoint (torchnldm.model.nldm.nldmbase property)": [[7, "torchnldm.model.nldm.NLDMBase.nde_adjoint"]], "nde_adjoint (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.nde_adjoint"]], "nde_depth (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.nde_depth"]], "nde_depth (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.nde_depth"]], "nde_hidden_dim (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.nde_hidden_dim"]], "nde_hidden_dim (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.nde_hidden_dim"]], "nde_integration_method (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.nde_integration_method"]], "nde_integration_method (torchnldm.model.nldm.nldmbase property)": [[7, "torchnldm.model.nldm.NLDMBase.nde_integration_method"]], "nde_integration_method (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.nde_integration_method"]], "nde_type (torchnldm.model.nldm.nldfconfig attribute)": [[7, "torchnldm.model.nldm.NLDFConfig.nde_type"]], "nde_type (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.nde_type"]], "postprocess() (torchnldm.model.nldm.nldf method)": [[7, "torchnldm.model.nldm.NLDF.postprocess"]], "postprocess() (torchnldm.model.nldm.nldm method)": [[7, "torchnldm.model.nldm.NLDM.postprocess"]], "predict_trajectory() (torchnldm.model.nldm.nldf method)": [[7, "torchnldm.model.nldm.NLDF.predict_trajectory"]], "predict_trajectory() (torchnldm.model.nldm.nldm method)": [[7, "torchnldm.model.nldm.NLDM.predict_trajectory"]], "predict_trajectory() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.predict_trajectory"]], "preprocess() (torchnldm.model.nldm.nldf method)": [[7, "torchnldm.model.nldm.NLDF.preprocess"]], "preprocess() (torchnldm.model.nldm.nldm method)": [[7, "torchnldm.model.nldm.NLDM.preprocess"]], "state_channels (torchnldm.model.nldm.nldmconfig attribute)": [[7, "torchnldm.model.nldm.NLDMConfig.state_channels"]], "summary() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.summary"]], "torchnldm.model.ae": [[7, "module-torchnldm.model.ae"]], "torchnldm.model.nde": [[7, "module-torchnldm.model.nde"]], "torchnldm.model.nldm": [[7, "module-torchnldm.model.nldm"]], "training_epoch() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.training_epoch"]], "validation_epoch() (torchnldm.model.nldm.nldmbase method)": [[7, "torchnldm.model.nldm.NLDMBase.validation_epoch"]], "wrap_nvf() (torchnldm.model.nde.neuralde method)": [[7, "torchnldm.model.nde.NeuralDE.wrap_nvf"]], "trainer (class in torchnldm.train.trainer)": [[8, "torchnldm.train.trainer.Trainer"]], "trainerconfig (class in torchnldm.train.trainer)": [[8, "torchnldm.train.trainer.TrainerConfig"]], "batch_size_nodes (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.batch_size_nodes"]], "batch_size_params (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.batch_size_params"]], "batch_size_timesteps (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.batch_size_timesteps"]], "bidirectional (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.bidirectional"]], "compile_mode (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.compile_mode"]], "device (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.device"]], "enable_amp (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.enable_amp"]], "enable_tf32 (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.enable_tf32"]], "lambda_l2 (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.lambda_l2"]], "latent_guidance (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.latent_guidance"]], "lr (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.lr"]], "lr_scheduler (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.lr_scheduler"]], "metrics_filename (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.metrics_filename"]], "n_epochs (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.n_epochs"]], "optimizer (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.optimizer"]], "output_directory (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.output_directory"]], "save_best_checkpoints (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.save_best_checkpoints"]], "save_checkpoints_freq (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.save_checkpoints_freq"]], "torchnldm.train.trainer": [[8, "module-torchnldm.train.trainer"]], "train() (torchnldm.train.trainer.trainer method)": [[8, "torchnldm.train.trainer.Trainer.train"]], "validation (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.validation"]], "warmup_lr (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.warmup_lr"]], "warmup_n_epochs (torchnldm.train.trainer.trainerconfig attribute)": [[8, "torchnldm.train.trainer.TrainerConfig.warmup_n_epochs"]], "activation (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.Activation"]], "configbase (class in torchnldm.utils.config)": [[9, "torchnldm.utils.config.ConfigBase"]], "configjsonencoder (class in torchnldm.utils.config)": [[9, "torchnldm.utils.config.ConfigJSONEncoder"]], "convblock (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.ConvBlock"]], "convlayer (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.ConvLayer"]], "convresblock (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.ConvResBlock"]], "downsample (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.Downsample"]], "gaussianfouriermap (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.GaussianFourierMap"]], "hadamardlayer (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.HadamardLayer"]], "hiddenopnet (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.HiddenOpNet"]], "hiddensumlayer (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.HiddenSumLayer"]], "hypernetwork (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.Hypernetwork"]], "linear (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.Linear"]], "mlp (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.MLP"]], "metricslogger (class in torchnldm.utils.metrics)": [[9, "torchnldm.utils.metrics.MetricsLogger"]], "pod() (in module torchnldm.utils.ops)": [[9, "torchnldm.utils.ops.POD"]], "positionalencoding (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.PositionalEncoding"]], "reshadamardlayer (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.ResHadamardLayer"]], "sine (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.Sine"]], "upsample (class in torchnldm.utils.nn)": [[9, "torchnldm.utils.nn.Upsample"]], "assert_dim_shape() (in module torchnldm.utils.metrics)": [[9, "torchnldm.utils.metrics.assert_dim_shape"]], "build_mlp() (torchnldm.utils.nn.mlp method)": [[9, "torchnldm.utils.nn.MLP.build_mlp"]], "default() (torchnldm.utils.config.configjsonencoder method)": [[9, "torchnldm.utils.config.ConfigJSONEncoder.default"]], "delete_tensor() (in module torchnldm.utils.ops)": [[9, "torchnldm.utils.ops.delete_tensor"]], "error() (in module torchnldm.utils.metrics)": [[9, "torchnldm.utils.metrics.error"]], "forward() (torchnldm.utils.nn.activation method)": [[9, "torchnldm.utils.nn.Activation.forward"]], "forward() (torchnldm.utils.nn.convblock method)": [[9, "torchnldm.utils.nn.ConvBlock.forward"]], "forward() (torchnldm.utils.nn.convlayer method)": [[9, "torchnldm.utils.nn.ConvLayer.forward"]], "forward() (torchnldm.utils.nn.convresblock method)": [[9, "torchnldm.utils.nn.ConvResBlock.forward"]], "forward() (torchnldm.utils.nn.downsample method)": [[9, "torchnldm.utils.nn.Downsample.forward"]], "forward() (torchnldm.utils.nn.gaussianfouriermap method)": [[9, "torchnldm.utils.nn.GaussianFourierMap.forward"]], "forward() (torchnldm.utils.nn.hadamardlayer method)": [[9, "torchnldm.utils.nn.HadamardLayer.forward"]], "forward() (torchnldm.utils.nn.hiddenopnet method)": [[9, "torchnldm.utils.nn.HiddenOpNet.forward"]], "forward() (torchnldm.utils.nn.hiddensumlayer method)": [[9, "torchnldm.utils.nn.HiddenSumLayer.forward"]], "forward() (torchnldm.utils.nn.hypernetwork method)": [[9, "torchnldm.utils.nn.Hypernetwork.forward"]], "forward() (torchnldm.utils.nn.linear method)": [[9, "torchnldm.utils.nn.Linear.forward"]], "forward() (torchnldm.utils.nn.mlp method)": [[9, "torchnldm.utils.nn.MLP.forward"]], "forward() (torchnldm.utils.nn.positionalencoding method)": [[9, "torchnldm.utils.nn.PositionalEncoding.forward"]], "forward() (torchnldm.utils.nn.reshadamardlayer method)": [[9, "torchnldm.utils.nn.ResHadamardLayer.forward"]], "forward() (torchnldm.utils.nn.sine method)": [[9, "torchnldm.utils.nn.Sine.forward"]], "forward() (torchnldm.utils.nn.upsample method)": [[9, "torchnldm.utils.nn.Upsample.forward"]], "get_gridpoints_2d() (in module torchnldm.utils.plot)": [[9, "torchnldm.utils.plot.get_gridpoints_2d"]], "get_layers_sizes() (in module torchnldm.utils.model)": [[9, "torchnldm.utils.model.get_layers_sizes"]], "get_meanstd() (in module torchnldm.utils.ops)": [[9, "torchnldm.utils.ops.get_meanstd"]], "get_minmax() (in module torchnldm.utils.ops)": [[9, "torchnldm.utils.ops.get_minmax"]], "get_model_params() (in module torchnldm.utils.model)": [[9, "torchnldm.utils.model.get_model_params"]], "init_params() (torchnldm.utils.nn.mlp method)": [[9, "torchnldm.utils.nn.MLP.init_params"]], "loss_criterion() (in module torchnldm.utils.metrics)": [[9, "torchnldm.utils.metrics.loss_criterion"]], "minmax_scaler() (in module torchnldm.utils.ops)": [[9, "torchnldm.utils.ops.minmax_scaler"]], "model_summary() (in module torchnldm.utils.model)": [[9, "torchnldm.utils.model.model_summary"]], "multiple_unsqueeze() (in module torchnldm.utils.ops)": [[9, "torchnldm.utils.ops.multiple_unsqueeze"]], "pe_vmap() (torchnldm.utils.nn.positionalencoding method)": [[9, "torchnldm.utils.nn.PositionalEncoding.pe_vmap"]], "plot1() (in module torchnldm.utils.plot)": [[9, "torchnldm.utils.plot.plot1"]], "plot3() (in module torchnldm.utils.plot)": [[9, "torchnldm.utils.plot.plot3"]], "plot_evolution() (in module torchnldm.utils.plot)": [[9, "torchnldm.utils.plot.plot_evolution"]], "plot_evolution_error() (in module torchnldm.utils.plot)": [[9, "torchnldm.utils.plot.plot_evolution_error"]], "print_current() (torchnldm.utils.metrics.metricslogger method)": [[9, "torchnldm.utils.metrics.MetricsLogger.print_current"]], "relative_error() (in module torchnldm.utils.metrics)": [[9, "torchnldm.utils.metrics.relative_error"]], "relative_error_vectorized() (in module torchnldm.utils.metrics)": [[9, "torchnldm.utils.metrics.relative_error_vectorized"]], "save() (torchnldm.utils.config.configbase method)": [[9, "torchnldm.utils.config.ConfigBase.save"]], "save() (torchnldm.utils.metrics.metricslogger method)": [[9, "torchnldm.utils.metrics.MetricsLogger.save"]], "set_hypernet_dims() (torchnldm.utils.nn.hypernetwork method)": [[9, "torchnldm.utils.nn.Hypernetwork.set_hypernet_dims"]], "set_seed() (in module torchnldm.utils.ops)": [[9, "torchnldm.utils.ops.set_seed"]], "standard_scaler() (in module torchnldm.utils.ops)": [[9, "torchnldm.utils.ops.standard_scaler"]], "timing() (in module torchnldm.utils.ops)": [[9, "torchnldm.utils.ops.timing"]], "torchnldm.utils.config": [[9, "module-torchnldm.utils.config"]], "torchnldm.utils.metrics": [[9, "module-torchnldm.utils.metrics"]], "torchnldm.utils.model": [[9, "module-torchnldm.utils.model"]], "torchnldm.utils.nn": [[9, "module-torchnldm.utils.nn"]], "torchnldm.utils.ops": [[9, "module-torchnldm.utils.ops"]], "torchnldm.utils.plot": [[9, "module-torchnldm.utils.plot"]], "update() (torchnldm.utils.metrics.metricslogger method)": [[9, "torchnldm.utils.metrics.MetricsLogger.update"]]}})